# Generated by Django 3.2.5 on 2021-07-10 20:33

import django.db.models.deletion
import fernet_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Instructor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("peloton_id", models.CharField(max_length=64, unique=True)),
                ("raw", models.JSONField(null=True)),
                ("name", models.CharField(max_length=150)),
                ("image_url", models.CharField(max_length=150)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PelotonProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("raw", models.JSONField(null=True)),
                ("peloton_id", models.CharField(max_length=64, null=True, unique=True)),
                ("username", models.CharField(max_length=150, unique=True)),
                (
                    "peloton_session_id",
                    fernet_fields.fields.EncryptedTextField(null=True),
                ),
                ("image_url", models.URLField(null=True)),
                ("last_linked", models.DateTimeField(null=True)),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Ride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("peloton_id", models.CharField(max_length=64, unique=True)),
                ("raw", models.JSONField(null=True)),
                ("title", models.TextField(null=True)),
                ("description", models.TextField(null=True)),
                ("image_url", models.URLField(null=True)),
                ("scheduled_start_time", models.DateTimeField(null=True)),
                (
                    "instructor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.instructor",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("format", models.CharField(default="simple", max_length=64)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("last_synced", models.DateTimeField(null=True)),
                ("visibility", models.CharField(default="privte", max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name="TournamentMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("manager", "Manager"),
                            ("member", "Member"),
                        ],
                        default="member",
                        max_length=16,
                    ),
                ),
                (
                    "peloton_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.pelotonprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Workout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("peloton_id", models.CharField(max_length=64, unique=True)),
                ("raw", models.JSONField(null=True)),
                ("status", models.CharField(max_length=32)),
                ("start_time", models.DateTimeField(null=True)),
                ("end_time", models.DateTimeField(null=True)),
                ("total_work", models.FloatField(null=True)),
                (
                    "peloton_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workouts",
                        to="tournaments.pelotonprofile",
                    ),
                ),
                (
                    "ride",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.ride",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TournamentTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "members",
                    models.ManyToManyField(
                        through="tournaments.TournamentMember",
                        to="tournaments.PelotonProfile",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="tournaments.tournament",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TournamentRide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ride",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.ride",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.tournament",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="tournamentmember",
            name="team",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="tournaments.tournamentteam",
            ),
        ),
        migrations.AddField(
            model_name="tournamentmember",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tournaments.tournament"
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="participants",
            field=models.ManyToManyField(
                through="tournaments.TournamentMember", to="tournaments.PelotonProfile"
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="rides",
            field=models.ManyToManyField(
                through="tournaments.TournamentRide", to="tournaments.Ride"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tournamentmember",
            unique_together={("tournament", "peloton_profile", "team")},
        ),
    ]
